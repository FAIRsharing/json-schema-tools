import json
import logging
from jinja2 import Template

#TODO get required attributes from required
#TODO add properties from the original schema

cedar_template = Template('''
{% set props = ["@context", "@type", "@id" ] %}
{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "@id": "",
    "@context": {{ CONTEXT_TEMPLATE | tojson }},
    "@type": "{{ TEMPLATE_TYPE }}",
    "type": "object",
    "title": "{{ title }} element schema", 
    "description": "{{ title }} element generated by the mircat-tools. ",
    "schema:name": "{{ id }}",
    "schema:description": "{{ description }}",
    "schema:schemaVersion": "1.4.0",
    "bibo:status":"bibo:draft",
    "pav:version":"0.1",
    "pav:createdOn": "{{ NOW  }}",
    "pav:lastUpdatedOn": "{{ NOW  }}",
    "pav:createdBy": "{{ USER_URL }}",
    "oslc:modifiedBy": "{{ USER_URL }}",
    "_ui": { 
        "order": [ 
            {% for item in properties %}
                {% if not item in props %} "{{ item }}" {% if not loop.last %},{% endif %} {% endif %}       
            {% endfor %} 
        ],
        "propertyLabels": {
            {% for item in properties %} 
                {% if not item in props %}  "{{ item }}" : "{{ item }}"{% if not loop.last %},{% endif %} {% endif %}
            {% endfor %} 
        },
        "pages": []
    },
    "required": [
        "@context",
        "@id",
        "schema:isBasedOn",
        "schema:name",
        "schema:description",
        "pav:createdOn",
        "pav:createdBy",
        "pav:lastUpdatedOn",
        "oslc:modifiedBy",
        "pav:version",
        "bibo:status"
    ],   
    "additionalProperties": {% if additionalProperties %} {{ additionalProperties }} {% else %} false {% endif%},
    "properties":{
        "@type": {
            "oneOf": [
                {
                    "format": "uri",
                    "type": "string"
                },
                {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "format": "uri",
                        "type": "string"
                    },
                    "minItems": 1
                }
            ]
        },
        "@id": {
            "format": "uri",
            "type": "string"
        },        
        "pav:createdOn": {
            "format": "date-time",
            "type": [
                "string",
                "null"
            ]
        },
        "schema:isBasedOn": {
            "format": "uri",
            "type": "string"
        },
        "schema:name": {
              "minLength": 1,
              "type": "string"
        },
        "oslc:modifiedBy": {
              "format": "uri",
              "type": [
                    "string",
                    "null"
              ]
        },
        "pav:lastUpdatedOn": {
              "format": "date-time",
              "type": [
                    "string",
                    "null"
              ]
        },
        "pav:createdBy": {
              "format": "uri",
                  "type": [
                    "string",
                    "null"
              ]
        },
        "schema:description": {
            "type": "string"
        },
        "@context":{
            "additionalProperties": false,
            "type": "object",
            "properties": {{ BASE_PROP | tojson }},
            "required": [
                "xsd",
                "pav",
                "schema",
                "oslc",
                "schema:isBasedOn",
                "schema:name",
                "schema:description",
                "pav:createdOn",
                "pav:createdBy",
                "pav:lastUpdatedOn",
                "oslc:modifiedBy"
            ]       
        }      
    }
}
''')


def convert_template(schema_filename):
    cedar_type = "https://schema.metadatacenter.org/core/Template"
    try:
        with open(schema_filename, 'r') as orig_schema_file:
            orig_schema = json.load(orig_schema_file)
            cedar_schema = cedar_template.render(orig_schema,
                                                 CONTEXT_TEMPLATE=set_context(),
                                                 TEMPLATE_TYPE=cedar_type,
                                                 BASE_PROP=set_base_properties(),
                                                 NOW="2018-05-30T03:48:41-0700",
                                                 USER_URL="https://metadatacenter.org/users/e856d779-6e24-4d72-a4e6-f7ae4b6419e2")
            return cedar_schema

    except IOError:
        logging.error("Error opening schema file")


def set_context():
    CONTEXT_TEMPLATE = {}
    CONTEXT_TEMPLATE["xsd"] = "http://www.w3.org/2001/XMLSchema#"
    CONTEXT_TEMPLATE["pav"] = "http://purl.org/pav/"
    CONTEXT_TEMPLATE["oslc"] = "http://open-services.net/ns/core#"
    CONTEXT_TEMPLATE["schema"] = "http://schema.org/"
    CONTEXT_TEMPLATE["schema:name"] = {}
    CONTEXT_TEMPLATE["schema:name"]["@type"] = "xsd:string"
    CONTEXT_TEMPLATE["schema:description"] = {}
    CONTEXT_TEMPLATE["schema:description"]["@type"] = "xsd:string"
    CONTEXT_TEMPLATE["pav:createdOn"] = {}
    CONTEXT_TEMPLATE["pav:createdOn"]["@type"] = "xsd:dateTime"
    CONTEXT_TEMPLATE["pav:createdBy"] = {}
    CONTEXT_TEMPLATE["pav:createdBy"]["@type"] = "@id"
    CONTEXT_TEMPLATE["pav:lastUpdatedOn"] = {}
    CONTEXT_TEMPLATE["pav:lastUpdatedOn"]["@type"] = "xsd:dateTime"
    CONTEXT_TEMPLATE["oslc:modifiedBy"] = {}
    CONTEXT_TEMPLATE["oslc:modifiedBy"]["@type"] = "@id"
    CONTEXT_TEMPLATE["bibo"] = "http://purl.org/ontology/bibo/"
    return CONTEXT_TEMPLATE

def set_base_properties():
    BASE_PROPERTIES = {}

    BASE_PROPERTIES["pav:createdOn"] = {}
    BASE_PROPERTIES["pav:createdOn"]['properties'] = {}
    BASE_PROPERTIES["pav:createdOn"]['properties']["@type"] = {}
    BASE_PROPERTIES["pav:createdOn"]['properties']["@type"]["enum"] = ["xsd:dateTime"]
    BASE_PROPERTIES["pav:createdOn"]['properties']["@type"]["type"] = "string"
    BASE_PROPERTIES["pav:createdOn"]["type"] = "object"

    BASE_PROPERTIES["pav:lastUpdatedOn"] = {}
    BASE_PROPERTIES["pav:lastUpdatedOn"]['properties'] = {}
    BASE_PROPERTIES["pav:lastUpdatedOn"]['properties']["@type"] = {}
    BASE_PROPERTIES["pav:lastUpdatedOn"]['properties']["@type"]["enum"] = ["xsd:dateTime"]
    BASE_PROPERTIES["pav:lastUpdatedOn"]['properties']["@type"]["type"] = "string"
    BASE_PROPERTIES["pav:lastUpdatedOn"]["type"] = "object"

    BASE_PROPERTIES["pav:createdBy"] = {}
    BASE_PROPERTIES["pav:createdBy"]['properties'] = {}
    BASE_PROPERTIES["pav:createdBy"]['properties']["@type"] = {}
    BASE_PROPERTIES["pav:createdBy"]['properties']["@type"]["enum"] = ["@id"]
    BASE_PROPERTIES["pav:createdBy"]['properties']["@type"]["type"] = "string"
    BASE_PROPERTIES["pav:createdBy"]["type"] = "object"

    BASE_PROPERTIES["schema:isBasedOn"] = {}
    BASE_PROPERTIES["schema:isBasedOn"]['properties'] = {}
    BASE_PROPERTIES["schema:isBasedOn"]['properties']["@type"] = {}
    BASE_PROPERTIES["schema:isBasedOn"]['properties']["@type"]["enum"] = ["@id"]
    BASE_PROPERTIES["schema:isBasedOn"]['properties']["@type"]["type"] = "string"
    BASE_PROPERTIES["schema:isBasedOn"]["type"] = "object"

    BASE_PROPERTIES["schema:name"] = {}
    BASE_PROPERTIES["schema:name"]['properties'] = {}
    BASE_PROPERTIES["schema:name"]['properties']["@type"] = {}
    BASE_PROPERTIES["schema:name"]['properties']["@type"]["enum"] = ["xsd:string"]
    BASE_PROPERTIES["schema:name"]['properties']["@type"]["type"] = "string"
    BASE_PROPERTIES["schema:name"]["type"] = "object"

    BASE_PROPERTIES["schema:description"] = {}
    BASE_PROPERTIES["schema:description"]['properties'] = {}
    BASE_PROPERTIES["schema:description"]['properties']["@type"] = {}
    BASE_PROPERTIES["schema:description"]['properties']["@type"]["enum"] = ["xsd:string"]
    BASE_PROPERTIES["schema:description"]['properties']["@type"]["type"] = "string"
    BASE_PROPERTIES["schema:description"]["type"] = "object"

    BASE_PROPERTIES["rdfs:label"] = {}
    BASE_PROPERTIES["rdfs:label"]['properties'] = {}
    BASE_PROPERTIES["rdfs:label"]['properties']["@type"] = {}
    BASE_PROPERTIES["rdfs:label"]['properties']["@type"]["enum"] = ["xsd:string"]
    BASE_PROPERTIES["rdfs:label"]['properties']["@type"]["type"] = "string"
    BASE_PROPERTIES["rdfs:label"]["type"] = "object"

    BASE_PROPERTIES["oslc:modifiedBy"] = {}
    BASE_PROPERTIES["oslc:modifiedBy"]['properties'] = {}
    BASE_PROPERTIES["oslc:modifiedBy"]['properties']["@type"] = {}
    BASE_PROPERTIES["oslc:modifiedBy"]['properties']["@type"]["enum"] = ["@id"]
    BASE_PROPERTIES["oslc:modifiedBy"]['properties']["@type"]["type"] = "string"
    BASE_PROPERTIES["oslc:modifiedBy"]["type"] = "object"

    BASE_PROPERTIES["oslc"] = {}
    BASE_PROPERTIES["oslc"]["enum"] = ["http://open-services.net/ns/core#"]
    BASE_PROPERTIES["oslc"]["type"] = "string"
    BASE_PROPERTIES["oslc"]["format"] = "uri"

    BASE_PROPERTIES["schema"] = {}
    BASE_PROPERTIES["schema"]["enum"] = ["http://schema.org/"]
    BASE_PROPERTIES["schema"]["type"] = "string"
    BASE_PROPERTIES["schema"]["format"] = "uri"

    BASE_PROPERTIES["rdfs"] = {}
    BASE_PROPERTIES["rdfs"]["enum"] = ["http://www.w3.org/2000/01/rdf-schema#"]
    BASE_PROPERTIES["rdfs"]["type"] = "string"
    BASE_PROPERTIES["rdfs"]["format"] = "uri"

    BASE_PROPERTIES["pav"] = {}
    BASE_PROPERTIES["pav"]["enum"] = ["http://purl.org/pav/"]
    BASE_PROPERTIES["pav"]["type"] = "string"
    BASE_PROPERTIES["pav"]["format"] = "uri"

    BASE_PROPERTIES["xsd"] = {}
    BASE_PROPERTIES["xsd"]["enum"] = ["http://www.w3.org/2001/XMLSchema#"]
    BASE_PROPERTIES["xsd"]["type"] = "string"
    BASE_PROPERTIES["xsd"]["format"] = "uri"

    return BASE_PROPERTIES
