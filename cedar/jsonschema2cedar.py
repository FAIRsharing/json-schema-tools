import json
import logging
from jinja2 import Template, Environment


CEDAR_TEMPLATE_ELEMENT_TYPE = "https://schema.metadatacenter.org/core/TemplateElement"


cedar_tmpl_element = Template('''
{
"$schema": "http://json-schema.org/draft-04/schema#"
"@id": "",
"@type": {{ CEDAR_TEMPLATE_ELEMENT_TYPE }},
"@context": {
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "pav": "http://purl.org/pav/",
    "oslc": "http://open-services.net/ns/core#",
    "schema": "http://schema.org/",
    "schema:name": {
      "@type": "xsd:string"
    },
    "schema:description": {
      "@type": "xsd:string"
    },
    "pav:createdOn": {
      "@type": "xsd:dateTime"
    },
    "pav:createdBy": {
      "@type": "@id"
    },
    "pav:lastUpdatedOn": {
      "@type": "xsd:dateTime"
    },
    "oslc:modifiedBy": {
      "@type": "@id"
    }
  },
"type": "object",
"title": "{{ title }}" 
"description": "{{ title }} generated by the mircat2cedar python tool. "
"schema:name": "{{ id }}",
"schema:description": "{{ description }}",
"_ui": {
   
    "order": [ 
    {% for item in properties %} 
    {{ item }},
    {% endfor %}
    ]
    "propertyLabels": {}
   
 }
}
''')



def convert_template_element(jsonschema_filename):
    try:
        with open(jsonschema_filename, 'r') as orig_schema_file:

            orig_schema = json.load(orig_schema_file)

            cedar_schema = cedar_tmpl_element.render(orig_schema, CEDAR_TEMPLATE_ELEMENT_TYPE= CEDAR_TEMPLATE_ELEMENT_TYPE)

            # ui_schema = {}
            # schema_name = jsonschema_filename [ jsonschema_filename.index("_") :]
            # ui_schema.update( { "title": schema_name} )
            #
            # cedar_schema.update( { "_ui": ui_schema} )

            #
            # "_ui": {
            #     "title": "vendor",
            #     "description": "Details to the vendor or manufacturer",
            #     "order": [
            #         "name",
            #         "orderNo",
            #         "serialNo",
            #         "lotNo"
            #     ],
            #     "propertyLabels": {
            #         "name": "name",
            #         "orderNo": "orderNo",
            #         "serialNo": "serialNo",
            #         "lotNo": "lotNo"
            #     }
            # },
            #

            return cedar_schema

    except IOError:
        logging.error("Error opening schema file")






